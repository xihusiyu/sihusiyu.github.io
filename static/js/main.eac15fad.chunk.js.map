{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","App","state","markdown","updateMarkdown","this","setState","console","log","className","Form","Group","controlId","Label","Control","as","rows","placeholder","value","onChange","event","target","dangerouslySetInnerHTML","__html","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAIKA,EAASC,EAAQ,IAmCPC,E,4MAhCbC,MAAQ,CACNC,SAAU,I,EAGZC,eAAiB,SAAUD,GACzBE,KAAKC,SAAS,CAAEH,c,4CAElB,WAAU,IAAD,OACDA,EAAaE,KAAKH,MAAlBC,SAEN,OADAI,QAAQC,IAAIL,GAEV,sBAAKM,UAAU,gBAAf,UACE,8BACE,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,6BACA,cAACH,EAAA,EAAKI,QAAN,CACEC,GAAG,WAAYC,KAAM,GACrBC,YAAY,iBACZC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAW,EAAKhB,eAAegB,EAAMC,OAAOH,eAI5D,gCACE,iDACA,qBAAKI,wBAAyB,CAAEC,OAAQxB,EAAOI,gB,GA1BvCqB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eac15fad.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"react-bootstrap/Form\";\n\n let marked = require(\"marked\");\n\nclass App extends Component {\n  state = {\n    markdown: \"\",\n  };\n\n  updateMarkdown = function (markdown) {\n    this.setState({ markdown });\n  };\n  render() {\n    let { markdown } = this.state;\n    console.log(markdown);\n    return (\n      <div className=\"App container\">\n        <div>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Markdown Input</Form.Label>\n            <Form.Control\n              as=\"textarea\"  rows={10}\n              placeholder=\"Enter Markdown\"\n              value={markdown}\n              onChange={(event) => this.updateMarkdown(event.target.value)}\n            ></Form.Control>\n          </Form.Group>\n        </div>\n        <div>\n          <h1>Markdown Output</h1>\n          <div dangerouslySetInnerHTML={{ __html: marked(markdown) }}></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}